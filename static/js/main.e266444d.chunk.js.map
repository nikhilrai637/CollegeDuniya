{"version":3,"sources":["index.js","App.js","useBookSearch.js"],"names":["ReactDOM","render","useState","query","setQuery","pageNumber","setPageNumber","loading","setLoading","error","setError","books","setBooks","hasMore","setHasMore","useEffect","cancel","axios","method","url","params","q","page","cancelToken","CancelToken","c","then","res","prevBooks","Set","data","docs","map","b","title","length","catch","e","isCancel","useBookSearch","observer","useRef","lastBookElementRef","useCallback","node","current","disconnect","IntersectionObserver","entries","isIntersecting","prevPageNumber","observe","type","value","onChange","target","book","index","ref","key","document","getElementById"],"mappings":"iOAIAA,IAASC,OAAO,mBCDD,WAAgB,IAAD,EACFC,mBAAS,IADP,mBACrBC,EADqB,KACdC,EADc,OAEQF,mBAAS,GAFjB,mBAErBG,EAFqB,KAETC,EAFS,OCAf,SAAuBH,EAAOE,GAAa,IAAD,EACzBH,oBAAS,GADgB,mBAChDK,EADgD,KACvCC,EADuC,OAE7BN,oBAAS,GAFoB,mBAEhDO,EAFgD,KAEzCC,EAFyC,OAG7BR,mBAAS,IAHoB,mBAGhDS,EAHgD,KAGzCC,EAHyC,OAIzBV,oBAAS,GAJgB,mBAIhDW,EAJgD,KAIvCC,EAJuC,KAgCvD,OA1BAC,qBAAU,WACRH,EAAS,MACR,CAACT,IAEJY,qBAAU,WAGR,IAAIC,EAgBJ,OAlBAR,GAAW,GACXE,GAAS,GAETO,IAAM,CACJC,OAAQ,MACRC,IAAK,qCACLC,OAAQ,CAAEC,EAAGlB,EAAOmB,KAAMjB,GAC1BkB,YAAa,IAAIN,IAAMO,aAAY,SAAAC,GAAC,OAAIT,EAASS,OAChDC,MAAK,SAAAC,GACNf,GAAS,SAAAgB,GACP,OAAO,YAAI,IAAIC,IAAJ,sBAAYD,GAAZ,YAA0BD,EAAIG,KAAKC,KAAKC,KAAI,SAAAC,GAAC,OAAIA,EAAEC,gBAEhEpB,EAAWa,EAAIG,KAAKC,KAAKI,OAAS,GAClC3B,GAAW,MACV4B,OAAM,SAAAC,GACHpB,IAAMqB,SAASD,IACnB3B,GAAS,MAEJ,kBAAMM,OACZ,CAACb,EAAOE,IAEJ,CAAEE,UAASE,QAAOE,QAAOE,WDvB5B0B,CAAcpC,EAAOE,GAJvBM,EAL0B,EAK1BA,MACAE,EAN0B,EAM1BA,QACAN,EAP0B,EAO1BA,QACAE,EAR0B,EAQ1BA,MAGI+B,EAAWC,mBACXC,EAAqBC,uBAAY,SAAAC,GACjCrC,IACAiC,EAASK,SAASL,EAASK,QAAQC,aACvCN,EAASK,QAAU,IAAIE,sBAAqB,SAAAC,GACtCA,EAAQ,GAAGC,gBAAkBpC,GAC/BP,GAAc,SAAA4C,GAAc,OAAIA,EAAiB,QAGjDN,GAAMJ,EAASK,QAAQM,QAAQP,MAClC,CAACrC,EAASM,IAOb,OACE,oCACE,2BAAOuC,KAAK,OAAOC,MAAOlD,EAAOmD,SAPrC,SAAsBjB,GACpBjC,EAASiC,EAAEkB,OAAOF,OAClB/C,EAAc,MAMXK,EAAMqB,KAAI,SAACwB,EAAMC,GAChB,OAAI9C,EAAMwB,SAAWsB,EAAQ,EACpB,yBAAKC,IAAKhB,EAAoBiB,IAAKH,GAAOA,GAE1C,yBAAKG,IAAKH,GAAOA,MAG5B,6BAAMjD,GAAW,cACjB,6BAAME,GAAS,YDtCL,MAASmD,SAASC,eAAe,W","file":"static/js/main.e266444d.chunk.js","sourcesContent":["import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n","import React, { useState, useRef, useCallback } from 'react'\r\nimport useBookSearch from './useBookSearch'\r\n\r\nexport default function App() {\r\n  const [query, setQuery] = useState('')\r\n  const [pageNumber, setPageNumber] = useState(1)\r\n\r\n  const {\r\n    books,\r\n    hasMore,\r\n    loading,\r\n    error\r\n  } = useBookSearch(query, pageNumber)\r\n\r\n  const observer = useRef()\r\n  const lastBookElementRef = useCallback(node => {\r\n    if (loading) return\r\n    if (observer.current) observer.current.disconnect()\r\n    observer.current = new IntersectionObserver(entries => {\r\n      if (entries[0].isIntersecting && hasMore) {\r\n        setPageNumber(prevPageNumber => prevPageNumber + 1)\r\n      }\r\n    })\r\n    if (node) observer.current.observe(node)\r\n  }, [loading, hasMore])\r\n\r\n  function handleSearch(e) {\r\n    setQuery(e.target.value)\r\n    setPageNumber(1)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <input type=\"text\" value={query} onChange={handleSearch}></input>\r\n      {books.map((book, index) => {\r\n        if (books.length === index + 1) {\r\n          return <div ref={lastBookElementRef} key={book}>{book}</div>\r\n        } else {\r\n          return <div key={book}>{book}</div>\r\n        }\r\n      })}\r\n      <div>{loading && 'Loading...'}</div>\r\n      <div>{error && 'Error'}</div>\r\n    </>\r\n  )\r\n}\r\n\r\n","import { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\n\r\nexport default function useBookSearch(query, pageNumber) {\r\n  const [loading, setLoading] = useState(true)\r\n  const [error, setError] = useState(false)\r\n  const [books, setBooks] = useState([])\r\n  const [hasMore, setHasMore] = useState(false)\r\n\r\n  useEffect(() => {\r\n    setBooks([])\r\n  }, [query])\r\n\r\n  useEffect(() => {\r\n    setLoading(true)\r\n    setError(false)\r\n    let cancel\r\n    axios({\r\n      method: 'GET',\r\n      url: 'http://openlibrary.org/search.json',\r\n      params: { q: query, page: pageNumber },\r\n      cancelToken: new axios.CancelToken(c => cancel = c)\r\n    }).then(res => {\r\n      setBooks(prevBooks => {\r\n        return [...new Set([...prevBooks, ...res.data.docs.map(b => b.title)])]\r\n      })\r\n      setHasMore(res.data.docs.length > 0)\r\n      setLoading(false)\r\n    }).catch(e => {\r\n      if (axios.isCancel(e)) return\r\n      setError(true)\r\n    })\r\n    return () => cancel()\r\n  }, [query, pageNumber])\r\n\r\n  return { loading, error, books, hasMore }\r\n}\r\n"],"sourceRoot":""}